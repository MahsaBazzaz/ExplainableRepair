running sturgeon/scheme2output.py --outfile /scratch/bazzaz.ma/mario04/1/t_shap_1.repaired --schemefile /scratch/bazzaz.ma/mario04/mario.scheme --size 14 18 --reach-move platform --reach-start-goal l-r 4 --custom text-level-weighted /scratch/bazzaz.ma/mario04/1/1.lvl /scratch/bazzaz.ma/mario04/1/t_shap_1.json --custom text-level /scratch/bazzaz.ma/mario04/1/start_end_1.txt hard --solver pysat-rc2-boolonly scipy --pattern-hard
using solver portfolio:pysat-rc2-boolonly;scipy
starting add tile rules...
add tile constraints
...add tile rules took 0.00, 0.02
starting add pattern rules...
add pattern constraints None
scheme has counts but not using count rules
...add pattern rules took 0.50, 0.52
starting add reachability rules...
add reachability start goal constraints
add reachability move constraints
...add reachability rules took 0.16, 0.68
starting add custom...
add custom out text level weighted constraint
add custom out text level constraint None
...add custom took 0.00, 0.69
starting solve...
portfolio starting 1 scipy
portfolio starting 0 pysat-rc2-boolonly
portfolio finishing 1 scipy
portfolio using 1 scipy
objective: 1.0
...solve took 508.88, 509.57
starting create output...
tile level
000000000000000000
000000000000000000
000000000000000000
000000000000000000
000000000000000000
000000000000000000
000002212000100000
000000000000000000
000000000000000000
000000200300000000
000000000330000000
000000000333000800
009000000333300300
333333000333333333
text level
------------------
------------------
------------------
------------------
------------------
------------------
-----SSQS---Q-----
------------------
------------------
------S--X--------
---------XX-------
---------XXX---}--
--{------XXXX--X--
XXXXXX---XXXXXXXXX
META {"type": "geom", "shape": "path", "group": "path", "data": [[12, 2, 8, 6], [8, 6, 7, 7], [7, 7, 8, 7], [8, 7, 9, 7], [9, 7, 10, 7], [10, 7, 11, 6], [11, 6, 12, 5], [12, 5, 8, 9], [8, 9, 4, 8], [4, 8, 5, 7], [5, 7, 2, 10], [2, 10, 3, 10], [3, 10, 4, 9], [4, 9, 5, 8], [5, 8, 2, 6], [2, 6, 3, 7], [3, 7, 4, 6], [4, 6, 5, 6], [5, 6, 2, 8], [2, 8, 3, 9], [3, 9, 4, 10], [4, 10, 5, 11], [5, 11, 6, 10], [6, 10, 7, 10], [7, 10, 8, 11], [8, 11, 9, 10], [9, 10, 5, 9], [5, 9, 6, 9], [6, 9, 7, 9], [7, 9, 8, 10], [8, 10, 9, 11], [9, 11, 10, 11], [10, 11, 6, 11], [6, 11, 7, 12], [7, 12, 8, 13], [8, 13, 9, 13], [9, 13, 10, 13], [10, 13, 11, 13], [11, 13, 12, 14], [12, 14, 8, 15], [8, 15, 9, 14], [9, 14, 10, 15], [10, 15, 11, 15]]}
META {"type": "geom", "shape": "tile", "group": "path", "data": [[12, 2], [11, 2], [11, 3], [10, 3], [10, 4], [9, 4], [9, 5], [8, 5], [8, 6], [7, 6], [7, 7], [8, 7], [9, 7], [10, 7], [11, 7], [11, 6], [12, 6], [12, 5], [11, 5], [11, 6], [10, 6], [10, 7], [9, 7], [9, 8], [8, 8], [8, 9], [7, 9], [6, 9], [5, 9], [4, 9], [4, 8], [5, 8], [5, 7], [4, 7], [4, 8], [3, 8], [3, 9], [2, 9], [2, 10], [3, 10], [4, 10], [4, 9], [5, 9], [5, 8], [4, 8], [4, 7], [3, 7], [3, 6], [2, 6], [3, 6], [3, 7], [4, 7], [4, 6], [5, 6], [4, 6], [4, 7], [3, 7], [3, 8], [2, 8], [3, 8], [3, 9], [4, 9], [4, 10], [5, 10], [5, 11], [6, 11], [6, 10], [7, 10], [8, 10], [8, 11], [9, 11], [9, 10], [8, 10], [7, 10], [6, 10], [5, 10], [5, 9], [6, 9], [7, 9], [8, 9], [8, 10], [9, 10], [9, 11], [10, 11], [9, 11], [8, 11], [7, 11], [6, 11], [7, 11], [7, 12], [8, 12], [8, 13], [9, 13], [10, 13], [11, 13], [12, 13], [12, 14], [11, 14], [10, 14], [9, 14], [8, 14], [8, 15], [9, 15], [9, 14], [10, 14], [10, 15], [11, 15]]}
META {"type": "geom", "shape": "line", "group": "offpath", "data": [[2, 2, 3, 3], [2, 14, 3, 14], [3, 3, 4, 4], [3, 14, 4, 13], [4, 4, 5, 5], [4, 13, 5, 12], [5, 5, 2, 2], [5, 12, 2, 14], [7, 11, 8, 12], [8, 1, 9, 2], [8, 2, 9, 3], [8, 4, 9, 5], [8, 5, 9, 4], [8, 12, 9, 12], [8, 14, 9, 15], [8, 16, 9, 16], [8, 17, 9, 17], [9, 2, 10, 1], [9, 3, 10, 3], [9, 4, 10, 5], [9, 5, 10, 6], [9, 12, 10, 12], [9, 15, 10, 14], [9, 16, 10, 17], [9, 17, 10, 16], [10, 1, 11, 0], [10, 3, 11, 2], [10, 5, 11, 4], [10, 6, 11, 5], [10, 12, 11, 12], [10, 14, 11, 14], [10, 16, 11, 16], [10, 17, 11, 17], [11, 0, 12, 0], [11, 2, 12, 1], [11, 4, 12, 3], [11, 5, 12, 4], [11, 12, 7, 11], [11, 14, 12, 13], [11, 16, 12, 17], [11, 17, 12, 16], [12, 0, 8, 1], [12, 1, 8, 5], [12, 3, 8, 2], [12, 4, 8, 4], [12, 13, 8, 14], [12, 16, 8, 16], [12, 17, 8, 17]]}
...create output took 0.03, 509.59
writing result to /scratch/bazzaz.ma/mario04/1/t_shap_1.repaired.result
writing text level to /scratch/bazzaz.ma/mario04/1/t_shap_1.repaired.lvl
--SOLVED
--TOTALTIME 509.96
