running sturgeon/scheme2output.py --outfile mario/50/shap_50.repaired --schemefile ./mario/mario.scheme --size 14 18 --reach-move platform --reach-start-goal l-r 4 --custom text-level-weighted ./mario/50/50.lvl mario/50/shap_50.json --custom text-level mario/50/start_end_50.txt hard --solver pysat-rc2-boolonly scipy --pattern-hard
using solver portfolio:pysat-rc2-boolonly;scipy
starting add tile rules...
add tile constraints
...add tile rules took 0.00, 0.01
starting add pattern rules...
add pattern constraints None
scheme has counts but not using count rules
...add pattern rules took 0.60, 0.62
starting add reachability rules...
add reachability start goal constraints
add reachability move constraints
...add reachability rules took 0.18, 0.79
starting add custom...
add custom out text level weighted constraint
add custom out text level constraint None
...add custom took 0.00, 0.80
starting solve...
portfolio starting 1 scipy
portfolio starting 0 pysat-rc2-boolonly
portfolio finishing 1 scipy
portfolio using 1 scipy
objective: 15.0
...solve took 306.53, 307.32
starting create output...
tile level
000000000000000000
000000000000000000
000000000000000200
000000000000000000
000000000000000000
000000000000000000
000000000000000000
000000020000000000
000000000000001000
000000000021000000
000000000000000000
000000000000000800
000900000000000300
333333000000333333
text level
------------------
------------------
---------------S--
------------------
------------------
------------------
------------------
-------S----------
--------------Q---
----------SQ------
------------------
---------------}--
---{-----------X--
XXXXXX------XXXXXX
META {"type": "geom", "shape": "path", "group": "path", "data": [[12, 3, 8, 7], [8, 7, 9, 8], [9, 8, 10, 7], [10, 7, 11, 6], [11, 6, 12, 5], [12, 5, 8, 9], [8, 9, 9, 9], [9, 9, 10, 10], [10, 10, 11, 11], [11, 11, 12, 12], [12, 12, 8, 13], [8, 13, 9, 13], [9, 13, 10, 12], [10, 12, 11, 13], [11, 13, 12, 14], [12, 14, 8, 17], [8, 17, 9, 16], [9, 16, 10, 17], [10, 17, 11, 17], [11, 17, 12, 16], [12, 16, 8, 15], [8, 15, 9, 14], [9, 14, 10, 14], [10, 14, 11, 15]]}
META {"type": "geom", "shape": "tile", "group": "path", "data": [[12, 3], [11, 3], [11, 4], [10, 4], [10, 5], [9, 5], [9, 6], [8, 6], [8, 7], [9, 7], [9, 8], [10, 8], [10, 7], [11, 7], [11, 6], [12, 6], [12, 5], [11, 5], [11, 6], [10, 6], [10, 7], [9, 7], [9, 8], [8, 8], [8, 9], [9, 9], [10, 9], [10, 10], [11, 10], [11, 11], [12, 11], [12, 12], [11, 12], [10, 12], [9, 12], [8, 12], [8, 13], [9, 13], [10, 13], [10, 12], [11, 12], [11, 13], [12, 13], [12, 14], [11, 14], [11, 15], [10, 15], [10, 16], [9, 16], [9, 17], [8, 17], [9, 17], [9, 16], [10, 16], [10, 17], [11, 17], [12, 17], [12, 16], [11, 16], [10, 16], [9, 16], [8, 16], [8, 15], [9, 15], [9, 14], [10, 14], [11, 14], [11, 15]]}
META {"type": "geom", "shape": "line", "group": "offpath", "data": [[0, 16, 1, 15], [1, 15, 0, 16], [2, 6, 3, 7], [3, 7, 4, 8], [3, 13, 4, 12], [4, 8, 5, 8], [4, 10, 5, 9], [4, 12, 5, 11], [4, 15, 5, 14], [5, 8, 6, 7], [5, 9, 6, 10], [5, 11, 6, 12], [5, 14, 6, 14], [6, 7, 2, 6], [6, 10, 7, 11], [6, 12, 7, 12], [6, 14, 7, 14], [7, 11, 8, 10], [7, 12, 8, 11], [7, 14, 3, 13], [8, 2, 9, 3], [8, 3, 9, 4], [8, 6, 9, 5], [8, 8, 9, 7], [8, 10, 4, 10], [8, 11, 4, 15], [8, 12, 9, 12], [9, 3, 10, 2], [9, 4, 10, 3], [9, 5, 10, 4], [9, 7, 10, 6], [9, 12, 10, 11], [10, 2, 11, 1], [10, 3, 11, 2], [10, 4, 11, 3], [10, 6, 11, 5], [10, 11, 11, 12], [10, 15, 11, 16], [11, 1, 12, 0], [11, 2, 12, 1], [11, 3, 12, 2], [11, 5, 12, 4], [11, 12, 12, 13], [11, 16, 12, 17], [12, 0, 8, 3], [12, 1, 8, 2], [12, 2, 8, 6], [12, 4, 8, 8], [12, 13, 8, 12], [12, 17, 10, 15]]}
...create output took 0.01, 307.33
writing result to mario/50/shap_50.repaired.result
writing text level to mario/50/shap_50.repaired.lvl
--SOLVED
--TOTALTIME 307.37
