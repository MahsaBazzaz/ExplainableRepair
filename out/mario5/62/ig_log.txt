running sturgeon/scheme2output.py --outfile /scratch/bazzaz.ma/mario5/62/ig_62.repaired --schemefile /scratch/bazzaz.ma/mario5/mario.scheme --size 14 18 --reach-move platform --reach-start-goal l-r 4 --custom text-level-weighted /scratch/bazzaz.ma/mario5/62/62.lvl /scratch/bazzaz.ma/mario5/62/ig_62.json --custom text-level /scratch/bazzaz.ma/mario5/62/start_end_62.txt hard --solver scipy pysat-rc2-boolonly pysat-rc2 --pattern-hard
using solver portfolio:scipy;pysat-rc2-boolonly;pysat-rc2
starting add tile rules...
add tile constraints
...add tile rules took 0.00, 0.01
starting add pattern rules...
add pattern constraints None
scheme has counts but not using count rules
...add pattern rules took 1.41, 1.42
starting add reachability rules...
add reachability start goal constraints
add reachability move constraints
...add reachability rules took 0.39, 1.82
starting add custom...
add custom out text level weighted constraint
add custom out text level constraint None
...add custom took 0.01, 1.83
starting solve...
portfolio starting 2 pysat-rc2
portfolio starting 1 pysat-rc2-boolonly
portfolio starting 0 scipy
portfolio finishing 1 pysat-rc2-boolonly
portfolio using 1 pysat-rc2-boolonly
objective: 10
...solve took 594.15, 595.98
starting create output...
tile level
000000000000000000
000000000000000000
000000000000000000
000000000000000000
000000000000000200
000000000000000000
000000000000000000
000000200100000000
000000000000000000
000000000000000000
000000000001000000
000000030000000800
000900330000000300
333333330000033333
text level
------------------
------------------
------------------
------------------
---------------S--
------------------
------------------
------S--Q--------
------------------
------------------
-----------Q------
-------X-------}--
---{--XX-------X--
XXXXXXXX-----XXXXX
META {"type": "geom", "shape": "path", "group": "path", "data": [[12, 3, 8, 6], [8, 6, 9, 7], [9, 7, 10, 7], [10, 7, 6, 6], [6, 6, 2, 5], [2, 5, 3, 6], [3, 6, 4, 7], [4, 7, 5, 8], [5, 8, 6, 9], [6, 9, 2, 12], [2, 12, 3, 11], [3, 11, 4, 11], [4, 11, 5, 12], [5, 12, 6, 12], [6, 12, 7, 13], [7, 13, 8, 14], [8, 14, 9, 15], [9, 15, 10, 14], [10, 14, 11, 14], [11, 14, 12, 14], [12, 14, 8, 17], [8, 17, 9, 17], [9, 17, 10, 16], [10, 16, 11, 15]]}
META {"type": "geom", "shape": "tile", "group": "path", "data": [[12, 3], [11, 3], [11, 4], [10, 4], [10, 5], [9, 5], [9, 6], [8, 6], [9, 6], [9, 7], [10, 7], [9, 7], [8, 7], [7, 7], [6, 7], [6, 6], [5, 6], [4, 6], [3, 6], [2, 6], [2, 5], [3, 5], [3, 6], [4, 6], [4, 7], [5, 7], [5, 8], [6, 8], [6, 9], [5, 9], [5, 10], [4, 10], [4, 11], [3, 11], [3, 12], [2, 12], [3, 12], [3, 11], [4, 11], [5, 11], [5, 12], [6, 12], [7, 12], [7, 13], [8, 13], [8, 14], [9, 14], [9, 15], [10, 15], [10, 14], [11, 14], [12, 14], [11, 14], [11, 15], [10, 15], [10, 16], [9, 16], [9, 17], [8, 17], [9, 17], [10, 17], [10, 16], [11, 16], [11, 15]]}
META {"type": "geom", "shape": "line", "group": "offpath", "data": [[8, 12, 9, 12], [9, 12, 10, 13], [9, 16, 10, 15], [10, 13, 11, 12], [10, 15, 11, 16], [10, 17, 11, 17], [11, 12, 12, 13], [11, 16, 12, 16], [11, 17, 12, 17], [12, 13, 9, 16], [12, 16, 8, 12], [12, 17, 10, 17]]}
...create output took 0.01, 595.99
writing result to /scratch/bazzaz.ma/mario5/62/ig_62.repaired.result
writing text level to /scratch/bazzaz.ma/mario5/62/ig_62.repaired.lvl
--SOLVED
--TOTALTIME 597.91
