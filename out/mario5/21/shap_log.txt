running sturgeon/scheme2output.py --outfile /scratch/bazzaz.ma/mario5/21/shap_21.repaired --schemefile /scratch/bazzaz.ma/mario5/mario.scheme --size 14 18 --reach-move platform --reach-start-goal l-r 4 --custom text-level-weighted /scratch/bazzaz.ma/mario5/21/21.lvl /scratch/bazzaz.ma/mario5/21/shap_21.json --custom text-level /scratch/bazzaz.ma/mario5/21/start_end_21.txt hard --solver scipy pysat-rc2-boolonly pysat-rc2 --pattern-hard
using solver portfolio:scipy;pysat-rc2-boolonly;pysat-rc2
starting add tile rules...
add tile constraints
...add tile rules took 0.00, 0.04
starting add pattern rules...
add pattern constraints None
scheme has counts but not using count rules
...add pattern rules took 2.75, 2.79
starting add reachability rules...
add reachability start goal constraints
add reachability move constraints
...add reachability rules took 0.91, 3.70
starting add custom...
add custom out text level weighted constraint
add custom out text level constraint None
...add custom took 0.02, 3.72
starting solve...
portfolio starting 0 scipy
portfolio starting 1 pysat-rc2-boolonly
portfolio starting 2 pysat-rc2
portfolio finishing 2 pysat-rc2
portfolio using 2 pysat-rc2
objective: 1
...solve took 652.10, 655.82
starting create output...
tile level
000000000000000000
000000000000000000
000000000000000200
000000000000000000
000000000000000000
000000000000000000
000000000000000000
000000020000000000
000000000000001000
000000000021000000
000000020000000000
000000000000000800
000900000000000300
333333000000033333
text level
------------------
------------------
---------------S--
------------------
------------------
------------------
------------------
-------S----------
--------------Q---
----------SQ------
-------S----------
---------------}--
---{-----------X--
XXXXXX-------XXXXX
META {"type": "geom", "shape": "path", "group": "path", "data": [[12, 3, 8, 6], [8, 6, 9, 6], [9, 6, 10, 5], [10, 5, 11, 6], [11, 6, 12, 5], [12, 5, 11, 5], [11, 5, 12, 4], [12, 4, 8, 7], [8, 7, 9, 7], [9, 7, 7, 9], [7, 9, 8, 10], [8, 10, 8, 11], [8, 11, 4, 10], [4, 10, 5, 9], [5, 9, 6, 10], [6, 10, 7, 11], [7, 11, 8, 12], [8, 12, 9, 12], [9, 12, 10, 12], [10, 12, 11, 12], [11, 12, 12, 13], [12, 13, 8, 13], [8, 13, 9, 14], [9, 14, 10, 14], [10, 14, 11, 13], [11, 13, 12, 14], [12, 14, 8, 17], [8, 17, 9, 17], [9, 17, 10, 16], [10, 16, 11, 15]]}
META {"type": "geom", "shape": "tile", "group": "path", "data": [[12, 3], [11, 3], [11, 4], [10, 4], [10, 5], [9, 5], [9, 6], [8, 6], [9, 6], [10, 6], [10, 5], [11, 5], [11, 6], [12, 6], [12, 5], [11, 5], [12, 5], [12, 4], [11, 4], [11, 5], [10, 5], [10, 6], [9, 6], [9, 7], [8, 7], [9, 7], [8, 7], [8, 8], [7, 8], [7, 9], [8, 9], [8, 10], [8, 11], [7, 11], [6, 11], [5, 11], [4, 11], [4, 10], [5, 10], [5, 9], [6, 9], [6, 10], [7, 10], [7, 11], [8, 11], [8, 12], [9, 12], [10, 12], [11, 12], [12, 12], [12, 13], [11, 13], [10, 13], [9, 13], [8, 13], [9, 13], [9, 14], [10, 14], [11, 14], [11, 13], [12, 13], [12, 14], [11, 14], [11, 15], [10, 15], [10, 16], [9, 16], [9, 17], [8, 17], [9, 17], [10, 17], [10, 16], [11, 16], [11, 15]]}
META {"type": "geom", "shape": "line", "group": "offpath", "data": [[0, 15, 1, 15], [1, 15, 0, 15], [3, 11, 4, 12], [4, 12, 5, 13], [5, 6, 6, 7], [5, 13, 6, 13], [6, 7, 5, 6], [6, 13, 7, 14], [7, 14, 3, 11], [8, 1, 9, 1], [8, 15, 9, 16], [9, 1, 10, 2], [9, 15, 10, 15], [9, 16, 10, 17], [10, 2, 11, 1], [10, 3, 11, 3], [10, 15, 11, 16], [10, 17, 11, 17], [11, 1, 12, 1], [11, 3, 12, 2], [11, 16, 12, 17], [11, 17, 12, 16], [12, 0, 8, 1], [12, 1, 12, 0], [12, 2, 10, 3], [12, 16, 8, 15], [12, 17, 9, 15]]}
...create output took 3.93, 659.75
writing result to /scratch/bazzaz.ma/mario5/21/shap_21.repaired.result
writing text level to /scratch/bazzaz.ma/mario5/21/shap_21.repaired.lvl
--SOLVED
--TOTALTIME 669.66
